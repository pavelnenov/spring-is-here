buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:3.1.4")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    archiveBaseName = 'gs-gateway'
    version =  '0.1.0'
    manifest {
        attributes 'Main-Class': 'com.pavel.spring.springishere.ApiGateway'
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.4"
    }
}

dependencies {
    implementation project(':common')
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway:4.0.6'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
    implementation('org.springframework.cloud:spring-cloud-starter-contract-stub-runner'){
        exclude group: "org.springframework.boot", module: "spring-boot-starter-web"
    }
    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.7.0'
    implementation 'io.github.classgraph:classgraph:4.8.139'
    implementation 'org.springdoc:springdoc-openapi:1.6.15'
    //springdoc-openapi-ui
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
    //springdoc-openapi-webflux-core
    implementation 'org.springdoc:springdoc-openapi-webflux-core:1.6.15'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jib {
    from {
        image = 'openjdk:22-jdk-slim'
        platforms {
            platform {
                architecture = 'arm64'
                os = 'linux'
            }
        }
    }
    to {
        // change this to your docker hub
        image = 'pavelnenov/spring-is-here-api-gateway'
        tags = ['v3']
    }
    container {
        jvmFlags = ['-Xms512m', '-Xmx512m', '-Dspring.profiles.active=k8s']
        mainClass = 'com.pavel.spring.springishere.ApiGateway'
    }
}