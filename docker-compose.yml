#version: '3.8'
#
#services:
#  auth-client-db:
#    image: mysql:8.0
#    cap_add:
#      - SYS_NICE
#    command: --default-authentication-plugin=mysql_native_password
#    restart: always
#    environment:
#      MYSQL_ROOT_PASSWORD: sekret
#    volumes:
#      - ./authentication-client/db_data:/var/lib/mysql
#      - ./authentication-client/db_init:/docker-entrypoint-initdb.d/init.sql
#    ports:
#      - "3306:3306"

version: '3.8'

services:
  auth-client-db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: sekret
    ports:
      - "3306:3306"
    volumes:
      - ./authentication-client/db_data:/var/lib/mysql
      - ./authentication-client/db_init:/docker-entrypoint-initdb.d/
  appointments-service-db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: sekret
    ports:
      - "3307:3306"
    volumes:
      - ./appointment-service/db_data:/var/lib/mysql
      - ./appointment-service/db_init:/docker-entrypoint-initdb.d/

#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.3.2
#    hostname: zookeeper
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_SERVER_ID: 1
#      ZOOKEEPER_SERVERS: zookeeper:2888:3888
#
#  kafka:
#      image: confluentinc/cp-kafka:7.3.2
#      hostname: kafka
#      container_name: kafka
#      ports:
#        - "9092:9092"
#        - "29092:29092"
#        - "9999:9999"
#      environment:
#        KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
#        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
#        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
#        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#        KAFKA_BROKER_ID: 1
#        KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#        KAFKA_JMX_PORT: 9999
#        KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
#        KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
#        KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
#      depends_on:
#        - zookeeper

#  adminer:
#    image: adminer
#    restart: always
#    ports:
#      - 8180:8180

